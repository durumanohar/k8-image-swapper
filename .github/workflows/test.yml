name: Test
on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'releases/*'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:

    - name: Install devmapper
      run: sudo apt-get install -y libdevmapper-dev

    - name: Set up Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: ^1.15.0
      id: go

    - name: Checkout
      uses: actions/checkout@v2

    - name: golangci-lint
      uses: golangci/golangci-lint-action@v2.3.0
      with:
        version: v1.33.0
        args: --timeout=5m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - name: Install devmapper
      run: sudo apt-get install -y libdevmapper-dev

    - name: Setup Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: ^1.15.0
      id: go

    - name: Checkout
      uses: actions/checkout@v2

    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod              # Module download cache
          ~/.cache/go-build         # Build cache (Linux)
          ~/Library/Caches/go-build # Build cache (Mac)
          '%LocalAppData%\go-build' # Build cache (Windows)
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Test
      run: go test -coverprofile cover.out ./...

    - uses: codecov/codecov-action@v1
      with:
        file: ./cover.out # optional
        fail_ci_if_error: true
        verbose: true

  image-scan:
    name: Image Scan
    runs-on: ubuntu-latest
    steps:

    - name: Install devmapper
      run: sudo apt-get install -y libdevmapper-dev

    - name: Checkout
      uses: actions/checkout@v2

    - name: Unshallow
      run: git fetch --prune --unshallow

    - name: Setup Go
      uses: actions/setup-go@v2.1.3
      with:
        go-version: ^1.15.0
      id: go

    - uses: actions/cache@v2
      with:
        path: |
          ~/go/pkg/mod              # Module download cache
          ~/.cache/go-build         # Build cache (Linux)
          ~/Library/Caches/go-build # Build cache (Mac)
          '%LocalAppData%\go-build' # Build cache (Windows)
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2.4.1
      with:
        version: latest
        args: release --rm-dist --skip-validate --skip-publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Scan image
      uses: anchore/scan-action@v2
      with:
        image: "ghcr.io/estahn/k8s-image-swapper/k8s-image-swapper:latest"
        fail-build: true
